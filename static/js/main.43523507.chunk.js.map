{"version":3,"sources":["serviceWorker.js","Playout.js","Pextracting.js","Players.js","Searchbox.js","Scroll.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","Playout","props","className","src","imgsrc","alt","name","club","Pextracting","Players","components","map","user","i","id","username","Searchbox","searchfield","searchChange","type","placeholder","onChange","Scroll","style","overflow","borders","height","children","App","onSearchChange","event","setState","target","value","state","this","filterplayers","filter","toLowerCase","includes","length","class","Component","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"mJAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCDSC,MAhBf,SAAiBC,GAChB,OACD,yBAAKC,UAAU,oDACf,yBAAMC,IAAKF,EAAMG,OAAQC,IAAI,SAC7B,4BAAKJ,EAAMK,MACX,2BAAIL,EAAMM,Q,4BCSKC,EAbG,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACbC,EAAWD,EAAQE,KAAI,SAACC,EAAKC,GACnC,OACE,kBAAC,EAAD,CACCT,OAAQK,EAAQI,GAAGT,OACnBU,GAAIL,EAAQI,GAAGC,GACfR,KAAMG,EAAQI,GAAGP,KACjBC,KAAME,EAAQI,GAAGN,UAIrB,OAAQ,6BAAMG,ICbDD,EAAU,CACrB,CACEK,GAAI,EACJR,KAAM,kBACNS,SAAU,OACVR,KAAM,YACNH,OAAO,SAGT,CACEU,GAAI,EACJR,KAAM,cACNS,SAAU,YACVR,KAAM,YACNH,OAAO,SAIT,CACEU,GAAI,EACJR,KAAM,QACNS,SAAU,WACVR,KAAM,SACNH,OAAO,SAGT,CACEU,GAAI,EACJR,KAAM,WACNS,SAAU,WACVR,KAAM,SACNH,OAAO,SAGT,CACEU,GAAI,EACJR,KAAM,aACNS,SAAU,SACVR,KAAM,OACNH,OAAO,SAGT,CACEU,GAAI,EACJR,KAAM,WACNS,SAAU,mBACVR,KAAM,SACFH,OAAO,SAGb,CACEU,GAAI,EACJR,KAAM,SACNS,SAAU,eACVR,KAAM,UACFH,OAAO,SAGb,CACEU,GAAI,EACJR,KAAM,YACNS,SAAU,gBACVR,KAAM,QACNH,OAAO,UAGT,CACEU,GAAI,EACJR,KAAM,kBACNS,SAAU,WACVR,KAAM,YACNH,OAAO,UAET,CACEU,GAAI,GACJR,KAAM,WACNS,SAAU,iBACVR,KAAM,cACNH,OAAO,WClEIY,MAXf,YAA+C,EAA3BC,YAA4B,IAAhBC,EAAe,EAAfA,aAC/B,OACC,yBAAKhB,UAAU,QACf,2BAAOiB,KAAK,SACZC,YAAY,iBACZC,SAAUH,MCGGI,MARf,SAAiBrB,GAEhB,OACC,yBAAKsB,MAAQ,CAACC,SAAS,SAAUC,QAAQ,YAAaC,OAAO,UAC5DzB,EAAM0B,WCuCMC,E,kDAnCd,aAAc,IAAD,8BACZ,gBAUDC,eAAe,SAACC,GACf,EAAKC,SAAS,CAACd,YAAYa,EAAME,OAAOC,SAVxC,EAAKC,MAAM,CACVzB,QAAQ,GACRQ,YAAY,KAJD,E,gEASZkB,KAAKJ,SAAS,CAACtB,QAAQA,M,+BAMf,IAAD,OACD2B,EAAcD,KAAKD,MAAMzB,QAAQ4B,QAAO,SAAA5B,GAC9C,OAAOA,EAAQH,KAAKgC,cAAcC,SAAS,EAAKL,MAAMjB,YAAYqB,kBAElE,OAAgC,IAA5BH,KAAKD,MAAMzB,QAAQ+B,OACf,uCAGR,yBAAKC,MAAM,MACX,6CACA,kBAAC,EAAD,CAAWvB,aAAciB,KAAKN,iBAC9B,kBAAC,EAAD,KAEO,kBAAC,EAAD,CAAapB,QAAS2B,U,GA7BbM,aCClBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACC,kBAAC,EAAD,OAEDC,SAASC,eAAe,SPsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.43523507.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nfunction Playout(props) {\n\treturn(\n<div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n<img  src={props.imgsrc} alt='fdsf' />\n<h2>{props.name}</h2>\n<p>{props.club}</p>\n</div>\n\n\t\t)\n}\n\n\n\n\n\n\nexport default Playout","import React from 'react'\nimport Playout from './Playout'\nconst Pextracting=({Players}) => {                               //change Robotlist and data base name\n\tconst components=Players.map((user,i)=> {                  //change database name (robots)\n\treturn(\n\t  <Playout \n\t  \timgsrc={Players[i].imgsrc}                                            //layout javascript function name  \n\t  \tid={Players[i].id}\n\t  \tname={Players[i].name}\n\t  \tclub={Players[i].club}\n\t  \t/>\n\t  \t);\n})\nreturn (<div>{components}</div>)}\n\nexport default Pextracting","export const Players = [\n  {\n    id: 1,\n    name: 'Fernando Torres',\n    username: 'Bret',\n    club: 'LiverPool',\n    imgsrc:'1.jpg'\n\n  },\n  {\n    id: 2,\n    name: 'Luis suarez',\n    username: 'Antonette',\n    club: 'Barcelona',\n    imgsrc:'2.jpg'\n\n\n  },\n  {\n    id: 3,\n    name: 'Kaka ',\n    username: 'Samantha',\n    club: 'Milan ',\n    imgsrc:'3.jpg'\n\n  },\n  {\n    id: 4,\n    name: 'Ronaldo ',\n    username: 'Karianne',\n    club: 'Inter ' ,       \n    imgsrc:'4.jpg'\n\n  },\n  {\n    id: 5,\n    name: 'Maradaona ',\n    username: 'Kamren',\n    club: 'JUve',\n    imgsrc:'5.jpg'\n\n  },\n  {\n    id: 6,\n    name: 'Maldini ',\n    username: 'Leopoldo_Corkery',\n    club: 'Milan ',\n        imgsrc:'6.jpg'\n\n  },\n  {\n    id: 7,\n    name: 'Henry ',\n    username: 'Elwyn.Skiles',\n    club: 'Arsenal',\n        imgsrc:'7.jpg'\n\n  },\n  {\n    id: 8,\n    name: 'Delpiero ',\n    username: 'Maxime_Nienow',\n    club: 'Juve ',\n    imgsrc:'8.jpeg'\n\n  },\n  {\n    id: 9,\n    name: 'Steven Gerrard ',\n    username: 'Delphine',\n    club: 'Liverpool',\n    imgsrc:'9.jpeg'\n  },\n  {\n    id: 10,\n    name: 'Zidanee ',\n    username: 'Moriah.Stanton',\n    club: 'Real Madrid',\n    imgsrc:'10.JPG'\n\n  }\n];\n","import React from 'react'\nfunction Searchbox({searchfield,searchChange}) {\n\treturn(\n\t\t<div className='pa2 '>\n\t\t<input type='serach' \n\t\tplaceholder='search players' \n\t\tonChange={searchChange}\n\t\t/>\n\t\t</div> \n\t\t)\n\n}\nexport default Searchbox","import React from 'react';\nfunction Scroll (props) {\n\n\treturn (\n\t\t<div style= {{overflow:'scroll', borders:'5px solid', height:'500px'}}>\n\t\t{props.children}\n\t\t</div>\n\t\t)\n}\nexport default Scroll","import React,{Component} from 'react'\nimport Pextracting from './Pextracting' //extracting data from database\nimport {Players} from './Players' //database file\nimport Searchbox from'./Searchbox' // Searchbox\nimport './index.css'\nimport Scroll from './Scroll'\n\n  \nclass App extends Component{\n\tconstructor(){\n\t\tsuper()\n\t\tthis.state={ \n\t\t\tPlayers:[],           //database name\n\t\t\tsearchfield:' '\n \n\t\t}\n\t}\n\tcomponentDidMount(){\n\t\tthis.setState({Players:Players})}\n\n\tonSearchChange=(event)=>{\n\t\tthis.setState({searchfield:event.target.value})\n\t\t\n\t}\n\trender(){ \n\t\tconst filterplayers=this.state.Players.filter(Players  =>{             // database name, filterwhat (robots)\n\t\treturn Players.name.toLowerCase().includes(this.state.searchfield.toLowerCase())                //database name (robots)\n\t\t})\n\t\tif (this.state.Players.length===0) {   //database name\n\t\t\treturn <h1>loading</h1>\n\n\t\t} else{return(\n\t\t<div class='tc'>\n\t\t<h1>Players Cards</h1>                                         \n\t\t<Searchbox searchChange={this.onSearchChange} />\n\t\t<Scroll>\n\t\t\n\t       \t<Pextracting Players={filterplayers}/>   \n\t\t</Scroll>         \n\t\t</div>)\n\t}\n\t\n}\n}\t\t\nexport default App\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons' //styling sheet\nimport Playout  from './Playout'; //layout\nimport App from './App' //searchbox\n\n\nReactDOM.render(\n  <React.StrictMode>\n   <App/> \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}